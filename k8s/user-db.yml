apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: user-db
spec:
  selector:
    matchLabels:
      app: user-db
  serviceName: user-db
  replicas: 1
  template:
    metadata:
      labels:
        app: user-db
    spec:
      containers:
      - name: user-db
        image: postgres:16
        resources:
          limits:
            memory: "200Mi"
            cpu: "200m"
          requests:
            memory: "100Mi"
            cpu: "100m"
        env:
          - name: DB_SERVICE
            valueFrom:
              secretKeyRef:
                name: my-secret
                key: USERS_DB_URI
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: my-secret
                key: USERS_DB_NAME
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: my-secret
                key: USERS_DB_USERNAME
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: my-secret
                key: USERS_DB_PASSWORD
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        volumeMounts:
          - name: data
            mountPath: /var/lib/postgresql/data
          - name: init-script
            mountPath: /docker-entrypoint-initdb.d/init.sql
            subPath: init.sql
      volumes:
        - name: init-script
          configMap:
            name: user-db-init  # Reference to the ConfigMap that holds init.sql

  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
      storageClassName: "standard-rwo" 
      volumeMode: Filesystem

---

apiVersion: v1
kind: Service
metadata:
  name: user-db
spec:
  clusterIP: None
  selector:
    app: user-db
  ports:
  - port: 5432
    targetPort: 5432
